# Copyright 2013 Dell Inc.
# ALL RIGHTS RESERVED.
# 
# This software is the confidential and proprietary information of
# Dell Inc. ("Confidential Information").  You shall not
# disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered
# into with Dell Inc.
# 
# DELL INC. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT
# THE SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
# NON-INFRINGEMENT. DELL SHALL NOT BE LIABLE FOR ANY
# DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
# OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.


# *** Locale ***
#
# If you would like log messages in a different language to the default set by
# the system, change this setting. The value must use one of the following
# formats:
#
#   "xx"
#   "xx_yy"
#   "xx_yy_zz"
#
# Where xx is an ISO language code, yy is an ISO country code and zz is a
# vendor-specific variant.
#
# ISO Language Codes: http://ftp.ics.uci.edu/pub/ietf/http/related/iso639.txt
# ISO Country Codes: http://www.chemie.fu-berlin.de/diverse/doc/ISO_3166.html
#
# For example, the Canadian English locale:
#Locale = "en_CA";

# *** Debug Level Cache Time ***
# 
# This is the length of time (in seconds) that a debug level for a particular class
# is cached by the logging system. After the cache expires, the debug level is 
# reloaded from the master list.
#
DebugLevelLifespan = 5;

# *** Targets ***
#
# There are a number of log Targets defined which may be configured:
#
#   CONSOLE         Outputs to the console in which the application was started
#   FILE            Outputs to a formatted text file
#   SERIALIZED_FILE Outputs to a serialized object file
#
# Agents normally have CONSOLE and FILE active.
#
# The SERIALIZED_FILE target is active in all FglAM applications, but as
# described in the table below, its threshold is set to OFF normally. This can
# be overridden in release-mode by setting its threshold to something other than
# OFF, preferably ALL.
#
# Each target has a set of properties that can be set to modify its behaviour.
#
# Note: some target properties are assigned non-default values in the last
#       section of this file.
#
# All targets have one common property:
#   threshold: String. The threshold log level for the target. Log messages of
#              a level below this threshold are ignored by the target. Standard
#              levels are ALL, DEBUG, VERBOSE, INFO, WARN, ERROR, FATAL and OFF,
#              in descending order of verbosity. The defaults are as follows:
#
#              Target           Release-mode Debug-mode
#              ---------------- ------------ ----------
#              CONSOLE          INFO         INFO
#              FILE             VERBOSE      ALL
#              SERIALIZED_FILE  OFF          ALL
#              NATIVE           INFO         INFO
#
#              A threshold of OFF effectively disables a target. File-based
#              targets will not create files when their threshold is OFF.
#
# The FILE and SERIALIZED_FILE log targets have the following additional
# properties:
#   compressBackups: Boolean. Whether to compress old log files using the gzip
#                    method when the maximum log file size has been reached and
#                    a new one is opened. Defaults to false.
#   directory:       String. The directory in which log files are created.
#                    Relative paths are resolved from the Quest home
#                    directory. The directory and all its parent directories are
#                    created if they don't exist. When using Windows-style
#                    backslash path separators, they must be escaped. For
#                    example, "C:\\Quest\\logs". Defaults to the "logs".
#                    subdirectory of the Quest home directory.
#   maxBackupCount:  Integer. How many old log files to retain when the maximum
#                    log file size has been reached and a new one is opened.
#                    -1 means infinite. Defaults to 50.
#   maxFileSize:     Long. The maximum size of a log file before it is closed
#                    and a new one is opened. The size is checked after each
#                    log message is written, so the actual size may exceed the
#                    maximum slightly. 0 means infinite. Defaults to
#                    (20000000) = 20MB.
#
# And the FILE log target has an additional property:
#   charset:         String. The character set in which to write to the file.
#                    Defaults to "UTF-8".
#
# CONSOLE and FILE are "formatting" log targets -- they apply a format
# pattern to the log message before writing it out. Each of these log
# targets has a default formatter: CONSOLE uses WrappingLogMessageFormatter
# which is based on DefaultLogMessageFormatter and wraps the formatted log
# message to a right margin and optionally indents the subsequently wrapped
# lines. FILE uses DefaultLogMessageFormatter.
#
# The formatter is controlled using the "formatter" subset of properties. The
# "formatter.class" property sets the class name for a new instance of a
# formatter that will be created and assigned to that log target before applying
# the remaining properties. If the "formatter.class" property is not present,
# the remaining properties are applied to the existing formatter.
#
# The com.quest.common.log.DefaultLogMessageFormatter has the following
# properties:
#   suppressImplDetails: Boolean. Does not include implementation details:
#                        thread name, category class and exception stacktrace.
#   suppressTimestamp:   Boolean. Does not include the timestamp. Used by log
#                        targets which have their own timestamping mechanism,
#                        for example, NATIVE.
#
# The com.quest.common.log.WrappingLogMessageFormatter has the following
# properties:
#   columns:            Integer. The maximum number of characters per line.
#   indentWrappedLines: Boolean. Whether to indent wrapped lines by 4 spaces.

# Example properties:
#Target.CONSOLE.formatter.columns = 120;
#Target.FILE.directory = "/var/logs/glue";
#Target.FILE.directory = "C:\\SystemLogs\\QuestGlue";
#Target.FILE.threshold = "DEBUG";
#Target.FILE.compressBackups = true;
#Target.FILE.maxBackupCount = 100;
#Target.FILE.maxFileSize = 10000000;
#Target.FILE.charset = "EUC-JP";
#Target.FILE.formatter.class = "com.quest.common.log.WrappingLogMessageFormatter";
#Target.FILE.formatter.indentWrappedLines = false;

# For FglAM tools the console is what users will be reading so dump most data
# there.  Also make it a little easier to read by removing timestamps and
# implementation details.
Target.CONSOLE.threshold = "INFO";
Target.CONSOLE.formatter.suppressTimestamp = true;
Target.CONSOLE.formatter.suppressImplDetails = false;
Target.CONSOLE.formatter.columns = 250;
Target.CONSOLE.formatter.indentWrappedLines = true;

#
# All file logging is done to a log file in the build directory
# of the agent being built. Since this can only be determined at
# runtime, disable the default FILE and SERIALAIZED_FILE targets
# here. They are added and configured dynamically by the agent compiler.
#
Target.FILE.threshold = "OFF";
Target.SERIALIZED_FILE.threshold = "OFF";
