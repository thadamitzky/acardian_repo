<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Copyright 2013 Dell Inc.
  ALL RIGHTS RESERVED.
  
  This software is the confidential and proprietary information of
  Dell Inc. ("Confidential Information").  You shall not
  disclose such Confidential Information and shall use it only in
  accordance with the terms of the license agreement you entered
  into with Dell Inc.
  
  DELL INC. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT
  THE SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED,
  INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
  NON-INFRINGEMENT. DELL SHALL NOT BE LIABLE FOR ANY
  DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
  OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
			targetNamespace="urn:X-quest.com:glue/messages/6"
			xmlns:msgs6="urn:X-quest.com:glue/messages/6"
            xmlns:msgs5="urn:X-quest.com:glue/messages/5"
            xmlns:msgs4="urn:X-quest.com:glue/messages/4"
            xmlns:msgs1_3="urn:X-quest.com:glue/messages/1.3"
			xmlns:msgs1_2="urn:X-quest.com:glue/messages/1.2"
			xmlns:msgs1_1="urn:X-quest.com:glue/messages/1.1"
			xmlns:msgs1_0="urn:X-quest.com:glue/messages/1.0"
			elementFormDefault="qualified">
      
    <!-- Added in version 5.5.5.2 (Archangel) -->   

	<!-- Import the Message 1.0 XSD -->
    <xsd:import namespace="urn:X-quest.com:glue/messages/1.0" schemaLocation="messages.1.0.xsd" />
	<!-- Import the Message 1.1 XSD -->
	<xsd:import namespace="urn:X-quest.com:glue/messages/1.1" schemaLocation="messages.1.1.xsd" />
	<!-- Import the Message 1.2 XSD -->
	<xsd:import namespace="urn:X-quest.com:glue/messages/1.2" schemaLocation="messages.1.2.xsd" />
    <!-- Import the Message 1.3 XSD -->
    <xsd:import namespace="urn:X-quest.com:glue/messages/1.3" schemaLocation="messages.1.3.xsd" />
    <!-- Import the Message 4 XSD -->
    <xsd:import namespace="urn:X-quest.com:glue/messages/4" schemaLocation="messages.4.xsd" />
	<!-- Import the Message 4 XSD -->
    <xsd:import namespace="urn:X-quest.com:glue/messages/5" schemaLocation="messages.5.xsd" />

	<xsd:element name="downstream-envelope">
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="msgs6:Envelope">
					<xsd:sequence>
						<xsd:element name="messages" type="msgs6:DownstreamMessages"
									 maxOccurs="unbounded" minOccurs="0" />
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>

    <xsd:element name="upstream-envelope">
            <xsd:complexType>
                <xsd:complexContent>
                    <xsd:extension base="msgs6:Envelope">
                        <xsd:sequence>
                            <xsd:element name="messages" type="msgs6:UpstreamMessages"
                                         maxOccurs="unbounded" minOccurs="0" />
                        </xsd:sequence>
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>
        </xsd:element>

	<xsd:complexType name="Envelope" abstract="true">
		<xsd:sequence>
			<xsd:element name="headers" type="msgs6:Headers" maxOccurs="1" minOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>

	<!--
		We are defining the ContentBlock here so that we can identify newly created
		ContentBlock in this schema. We need to know this so that we can add the Message to
		the appropriate UpstreamMessages list
	-->
	<xsd:complexType name="ContentBlock" abstract="true" block="restriction">
		<xsd:annotation>
            <xsd:documentation>
                Extends the msgs1_0:ContentBlock to denote new Content Blocks that have been
				added to the v5 schema
            </xsd:documentation>
        </xsd:annotation>
    	<xsd:attribute name="msgid" type="msgs1_0:UUID" use="required"/>
    	<xsd:attribute name="response-to" type="msgs1_0:UUID" use="optional"/>
		<xsd:attribute name="sequence-key" use="required" type="xsd:long">
			<xsd:annotation>
				<xsd:documentation>
					When the message center is initialized a sequence key will be generated.
					This key will be held by the downstream hosts that will process the message. When
					the downstream hosts see that this value has changed, they will then reset their
					sequence number counters.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="sequence-number" use="optional" default="1">
			<xsd:annotation>
				<xsd:documentation>
					Sequence number to denote message instance counts. This can be used to help
					determine if a ordered set of messages is received out of order or if conflicting
					message 'contents' should process only newer instances.
				</xsd:documentation>
			</xsd:annotation>
			<xsd:simpleType>
				<xsd:restriction base="xsd:long">
					<xsd:minExclusive value="0"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>

	<!--
	We are defining the DownstreamContentBlock here so that we can identify newly created
	DownstreamContentBlock in this schema. We need to know this so that we can add the Message to
	the appropriate DownstreamMessages list
	-->
	<xsd:complexType name="DownstreamContentBlock" abstract="true">
    	<xsd:complexContent>
    		<xsd:extension base="msgs6:ContentBlock"/>
    	</xsd:complexContent>
    </xsd:complexType>

	<!--
		We are defining the UpstreamContentBlock here so that we can identify newly created
		UpstreamContentBlock in this schema. We need to know this so that we can add the Message to
		the appropriate UpstreamMessages list
	-->
	<xsd:complexType name="UpstreamContentBlock" abstract="true">
        <xsd:annotation>
            <xsd:documentation>
                Extends the msgs1_0:UpstreamContentBlock to denote new Upstream Content Block
				based messages that have been added to the v5 schema
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
    		<xsd:extension base="msgs6:ContentBlock"/>
    	</xsd:complexContent>
    </xsd:complexType>

	<!--
		We are defining the UpstreamAgentBlock here so that we can identify newly created
		UpstreamAgentBlock in this schema. We need to know this so that we can add the Message to
		the appropriate UpstreamMessages list
	-->
	<xsd:complexType name="UpstreamAgentBlock" abstract="true">
        <xsd:annotation>
            <xsd:documentation>
                Extends the msgs1_0:UpstreamAgentBlock to denote new Upstream Agent Block
				based messages that have been added to the v5 schema
			</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
			<xsd:extension base="msgs6:UpstreamContentBlock">
				<xsd:attribute name="agentid" type="msgs1_0:UUID"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="UpstreamMessages">
		<xsd:annotation>
			<xsd:documentation>
				Defines all UpstreamMessages that can be handled in this schema version
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="msgs5:UpstreamMessages">
				<xsd:sequence>
					<xsd:group ref="msgs6:UpstreamMessageTypes_v1_0_Extensions"
							   maxOccurs="unbounded"
							   minOccurs="0" />
					<xsd:group ref="msgs6:UpstreamMessageTypes_v1_1_Extensions"
							   maxOccurs="unbounded"
							   minOccurs="0" />
					<xsd:group ref="msgs6:UpstreamMessageTypes_v1_2_Extensions"
							   maxOccurs="unbounded"
							   minOccurs="0" />
                    <xsd:group ref="msgs6:UpstreamMessageTypes_v1_3_Extensions"
                               maxOccurs="unbounded"
                               minOccurs="0" />
                    <xsd:group ref="msgs6:UpstreamMessageTypes_v4_Extensions"
                               maxOccurs="unbounded"
                               minOccurs="0" />
					<xsd:group ref="msgs6:UpstreamMessageTypes_v5_Extensions"
                               maxOccurs="unbounded"
                               minOccurs="0" />
					<xsd:group ref="msgs6:UpstreamMessageTypes_v6"
							   maxOccurs="unbounded"
							   minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="DownstreamMessages">
		<xsd:annotation>
			<xsd:documentation>
				Defines all DownstreamMessages that can be handled in this schema version
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="msgs5:DownstreamMessages">
				<xsd:sequence>
					<xsd:group ref="msgs6:DownstreamMessageTypes_v1_0_Extensions" maxOccurs="unbounded"
						   minOccurs="0" />
					<xsd:group ref="msgs6:DownstreamMessageTypes_v1_1_Extensions" maxOccurs="unbounded"
						   minOccurs="0" />
					<xsd:group ref="msgs6:DownstreamMessageTypes_v1_2_Extensions" maxOccurs="unbounded"
						   minOccurs="0" />
                    <xsd:group ref="msgs6:DownstreamMessageTypes_v1_3_Extensions" maxOccurs="unbounded"
                           minOccurs="0" />
					<xsd:group ref="msgs6:DownstreamMessageTypes_v4_Extensions" maxOccurs="unbounded"
						   minOccurs="0" />
					<xsd:group ref="msgs6:DownstreamMessageTypes_v5_Extensions" maxOccurs="unbounded"
						   minOccurs="0" />
					<xsd:group ref="msgs6:DownstreamMessageTypes_v6" maxOccurs="unbounded"
						   minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<!--
	 Only list elements that are extending an existing UpstreamContentBlock from the
	 1.0 messages schema.
	 -->
	<xsd:group name="UpstreamMessageTypes_v1_0_Extensions">
		<xsd:annotation>
			<xsd:documentation>
				List UpstreamContentBlock messages that extend existing 1.0 UpstreamContentBlocks
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>

		</xsd:choice>
	</xsd:group>

	<!--
	 Only list elements that are extending an existing UpstreamContentBlock from the
	 1.1 messages schema.
	 -->
	<xsd:group name="UpstreamMessageTypes_v1_1_Extensions">
		<xsd:annotation>
			<xsd:documentation>
				List UpstreamContentBlock messages that extend existing 1.1 UpstreamContentBlocks
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>

		</xsd:choice>
	</xsd:group>

	<!--
	 Only list elements that are extending an existing UpstreamContentBlock from the
	 1.2 messages schema.
	 -->
	<xsd:group name="UpstreamMessageTypes_v1_2_Extensions">
		<xsd:annotation>
			<xsd:documentation>
				List UpstreamContentBlock messages that extend existing 1.2 UpstreamContentBlocks
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>

		</xsd:choice>
	</xsd:group>

    <!--
     Only list elements that are extending an existing UpstreamContentBlock from the
     1.3 messages schema.
     -->
    <xsd:group name="UpstreamMessageTypes_v1_3_Extensions">
        <xsd:annotation>
            <xsd:documentation>
                List UpstreamContentBlock messages that extend existing 1.3 UpstreamContentBlocks
            </xsd:documentation>
        </xsd:annotation>
        <xsd:choice>

        </xsd:choice>
    </xsd:group>
    
    <!--
     Only list elements that are extending an existing UpstreamContentBlock from the
     4 messages schema.
     -->
    <xsd:group name="UpstreamMessageTypes_v4_Extensions">
        <xsd:annotation>
            <xsd:documentation>
                List UpstreamContentBlock messages that extend existing v4 UpstreamContentBlocks
            </xsd:documentation>
        </xsd:annotation>
        <xsd:choice>

        </xsd:choice>
    </xsd:group>

	<!--
     Only list elements that are extending an existing UpstreamContentBlock from the
     4 messages schema.
     -->
    <xsd:group name="UpstreamMessageTypes_v5_Extensions">
        <xsd:annotation>
            <xsd:documentation>
                List UpstreamContentBlock messages that extend existing v5 UpstreamContentBlocks
            </xsd:documentation>
        </xsd:annotation>
        <xsd:choice>

        </xsd:choice>
    </xsd:group>

	<!--
	Only list elements that are implementing new UpstreamContentBlock messages.
	-->
	<xsd:group name="UpstreamMessageTypes_v6">
		<xsd:annotation>
			<xsd:documentation>
				List new UpstreamContentBlock messages that have been added to the v6 schema
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="placeholder-1"    type="msgs6:Placeholder-Upstream-1"/>
			<xsd:element name="placeholder-2"    type="msgs6:Placeholder-Upstream-2"/>
	    </xsd:choice>
	</xsd:group>

   	<!--
	 Only list elements that are extending an existing DownstreamContentBlock from the
	 1.0 messages schema.
	 -->
	<xsd:group name="DownstreamMessageTypes_v1_0_Extensions">
		<xsd:annotation>
			<xsd:documentation>
				List DownstreamContentBlock messages that extend existing 1.0 DownstreamContentBlock
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
		</xsd:choice>
	</xsd:group>

	<!--
	 Only list elements that are extending an existing DownstreamContentBlock from the
	 1.1 messages schema.
	 -->
	<xsd:group name="DownstreamMessageTypes_v1_1_Extensions">
		<xsd:annotation>
			<xsd:documentation>
				List DownstreamContentBlock messages that extend existing 1.1 DownstreamContentBlock
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>

		</xsd:choice>
	</xsd:group>

	<!--
	 Only list elements that are extending an existing DownstreamContentBlock from the
	 1.2 messages schema.
	 -->
	<xsd:group name="DownstreamMessageTypes_v1_2_Extensions">
		<xsd:annotation>
			<xsd:documentation>
				List DownstreamContentBlock messages that extend existing 1.2 DownstreamContentBlock
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>

		</xsd:choice>
	</xsd:group>

    <!--
     Only list elements that are extending an existing DownstreamContentBlock from the
     1.3 messages schema.
     -->
    <xsd:group name="DownstreamMessageTypes_v1_3_Extensions">
        <xsd:annotation>
            <xsd:documentation>
                List DownstreamContentBlock messages that extend existing 1.3 DownstreamContentBlock
            </xsd:documentation>
        </xsd:annotation>
        <xsd:choice>

        </xsd:choice>
    </xsd:group>

	<!--
	Only list elements that are implementing new DownstreamContentBlock messages.
	-->
	<xsd:group name="DownstreamMessageTypes_v4_Extensions">
		<xsd:annotation>
			<xsd:documentation>
				List DownstreamContentBlock messages that extend existing v4 schema
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>

        </xsd:choice>
	</xsd:group>

	<!--
	Only list elements that are implementing new DownstreamContentBlock messages.
	-->
	<xsd:group name="DownstreamMessageTypes_v5_Extensions">
		<xsd:annotation>
			<xsd:documentation>
				List DownstreamContentBlock messages that extend existing v5 schema
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>

        </xsd:choice>
	</xsd:group>

	<!--
	Only list elements that are implementing new DownstreamContentBlock messages.
	-->
	<xsd:group name="DownstreamMessageTypes_v6">
		<xsd:annotation>
			<xsd:documentation>
				List new DownstreamContentBlock messages that have been added to the v6 schema
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
            <xsd:element name="restart"          type="msgs6:Restart"/>
			<xsd:element name="placeholder-2"    type="msgs6:Placeholder-Downstream-2"/>
        </xsd:choice>
	</xsd:group>


	<xsd:complexType name="Headers">
		<xsd:annotation>
			<xsd:documentation>
				Header elements must appear in the order they are
				defined in the schema. Specifically:
				   1) an option single "poll"
				   2) One or more "host"s and
				   3) Zero or more "agent"s
				   4) an optional single 'credentialTimestamp'
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="poll" type="msgs1_0:Poll" maxOccurs="1" minOccurs="0"/>
			<xsd:element name="timesync" type="msgs1_0:TimeSync" maxOccurs="1" minOccurs="0"/>

			<!--
			  Have to support all versions of the host object. This means we lose
			  the ability to tell the schema that we need one of any host, but I can
			  live with that.
			-->
			<xsd:element name="host10" type="msgs1_0:Host" maxOccurs="unbounded" minOccurs="0"/>
			<xsd:element name="host11" type="msgs1_1:Host" maxOccurs="unbounded" minOccurs="0"/>
			<xsd:element name="host12" type="msgs1_2:Host" maxOccurs="unbounded" minOccurs="0"/>
			<xsd:element name="host13" type="msgs1_3:Host" maxOccurs="unbounded" minOccurs="0"/>
			<xsd:element name="hostv6" type="msgs6:Host" maxOccurs="unbounded" minOccurs="0"/>

			<!--
			   Have to support all versions of the agent object
			-->
			<xsd:element name="agent10" type="msgs1_0:Agent" maxOccurs="unbounded" minOccurs="0"/>
			<xsd:element name="agent13" type="msgs1_3:Agent" maxOccurs="unbounded" minOccurs="0"/>

			<!--
			   We don't actually use this anymore, but we have to carry it forward for backwards compatibility
			   -->
			<xsd:element name="credentialTimestamp" type="xsd:long" maxOccurs="1" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="Host">
	  <xsd:annotation>
	    <xsd:documentation>Extends the msgs1_3:Host</xsd:documentation>
	  </xsd:annotation>
	  <xsd:complexContent>
	    <xsd:extension base="msgs1_3:Host">
	      <xsd:attribute name="epoch" type="xsd:long" use="required">
	        <xsd:annotation>
	          <xsd:documentation>
	            Sets the epoch timestamp (in millis) for when this host instance was initially created.
				We use this value to compare when connecting to the adapter between polls. Should
				the value be different from the stored Host object's then we know that the Agent
				Manager has been restarted in-between polling intervals.
			  </xsd:documentation>
	        </xsd:annotation>
	      </xsd:attribute>
	    </xsd:extension>
	  </xsd:complexContent>
	</xsd:complexType>

    <xsd:complexType name="Restart">
        <xsd:annotation>
            <xsd:documentation>
                Instruct a Glue client to restart itself.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="msgs6:DownstreamContentBlock">
                <xsd:sequence>
                    <xsd:element name="message" type="xsd:string" minOccurs="0" maxOccurs="1"/>
                    <xsd:element name="argument" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
	<xsd:complexType name="Placeholder-Downstream-2">
       <xsd:complexContent>
           <xsd:extension base="msgs6:DownstreamContentBlock"/>
       </xsd:complexContent>
   </xsd:complexType>

	<xsd:complexType name="Placeholder-Upstream-1">
       <xsd:complexContent>
           <xsd:extension base="msgs6:UpstreamContentBlock"/>
       </xsd:complexContent>
   </xsd:complexType>
	<xsd:complexType name="Placeholder-Upstream-2">
       <xsd:complexContent>
           <xsd:extension base="msgs6:UpstreamContentBlock"/>
       </xsd:complexContent>
   </xsd:complexType>

</xsd:schema>
