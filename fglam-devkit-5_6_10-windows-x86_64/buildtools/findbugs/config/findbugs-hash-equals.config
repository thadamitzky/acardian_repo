# Copyright 2013 Dell Inc.
# ALL RIGHTS RESERVED.
# 
# This software is the confidential and proprietary information of
# Dell Inc. ("Confidential Information").  You shall not
# disclose such Confidential Information and shall use it only in
# accordance with the terms of the license agreement you entered
# into with Dell Inc.
# 
# DELL INC. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT
# THE SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
# NON-INFRINGEMENT. DELL SHALL NOT BE LIABLE FOR ANY
# DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
# OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.


# Configuration file for com.quest.common.test.findbugs.FindHashEqualsBugs

# List of classes that are required to be 100% immutable if they implement
# hashCode/equals or compareTo methods, that is all fields must be final.
# Classes excluded from this list will only be required not to have any
# user-controlled code that changed fields that are used in hashCode/equals or
# compareTo methods. See also the "IgnoredAccessorMethods" config element below.
# By default all classes are included in this list.
#
# Each exclusion should include an explanation of why it was excluded.
StrictCheckClasses = ClassList (
);

# This is the list of methods that will be ignored when checking whether a
# particular field is not settable. By default all methods are analyzed.
# This list is only used for classes excluded from the StrictCheckClasses list.
# This list is intended to match only methods whose code we do not control,
# i.e. methods inserted into our classes by tools such as JiBX.
IgnoredAccessorMethods = MethodList ();

CallsAllowedInHashCodeMethods = MethodList (
	include /\.hashCode\(\)I$/,
	include /\.equals\(Ljava\/lang\/Object;\)Z/,
	include "java.lang.Object.getClass()Ljava/lang/Class;",
	include "com.quest.common.util.HashUtil",
);

CallsAllowedInEqualsMethods = MethodList (
	include /\.hashCode\(\)I$/,
	include /\.equals\(Ljava\/lang\/Object;\)Z/,
	include "java.lang.Object.getClass()Ljava/lang/Class;",
	include "java.util.Arrays.equals",
	include "com.quest.common.util.HashUtil",
	include "com.sitraka.pas.common.nodekey.NodeKey.equals(Lcom/sitraka/pas/common/nodekey/NodeKey;)Z",
);

CallsAllowedInCompareToMethods = MethodList (
	include /\.hashCode\(\)I$/,
	include /\.equals\(Ljava\/lang\/Object;\)Z/,
	include /\.compareTo\([^;]+;\)I$/,
	include "com.quest.common.util.CompareUtil",
);

# This map lists calls allowed inside specific hashCode, equals or compareTo
# methods. Do not add extra exclusions to this map unless those calls are
# absolutely necessary for implementing hashCode/equals methods correctly.
ExclusionMap = {
	MethodList (
	) : MethodList (
		include "java.security.Principal.getName()Ljava/lang/String;",
	),
};
