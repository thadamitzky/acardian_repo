<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2013 Dell Inc.
  ALL RIGHTS RESERVED.
  
  This software is the confidential and proprietary information of
  Dell Inc. ("Confidential Information").  You shall not
  disclose such Confidential Information and shall use it only in
  accordance with the terms of the license agreement you entered
  into with Dell Inc.
  
  DELL INC. MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT
  THE SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED,
  INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR
  NON-INFRINGEMENT. DELL SHALL NOT BE LIABLE FOR ANY
  DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING
  OR DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
-->


<project name="FglAMExample" default="timeagent-dist" xmlns:fglam="fglam:/ant/macros">

    <!-- Add the external environment and find the FglAM installation -->
    <property environment="env"/>
    <property name="fglam.devkit.home" value="${env.FGLAM_DEVKIT_HOME}"/>

    <fail>
        <condition><not>
          <and>
              <available file="${fglam.devkit.home}" type="dir"/>
              <available file="${fglam.devkit.home}/buildtools/lib/devkit-ant.jar" type="file"/>
          </and>
        </not></condition>.
        The specified FglAM developer's kit location, ${fglam.devkit.home},
        does not appear to exist as a valid directory or does not contain a
        recognized FglAM developer's kit.
    </fail>

    <!-- Define some directories used throughout the build process -->
    <property name="timeagent.src.dir"         value="${basedir}/timeagent/src"/>
    <property name="timeagent.config.dir"      value="${basedir}/timeagent/config"/>
    <property name="timeagent.build.dir"       value="${basedir}/build/timeagent"/>
    <property name="timeagent.build.test.dir"  value="${timeagent.build.dir}/test"/>
    <property name="timeagent.tooling.output"  value="${timeagent.build.dir}/tooling"/>
    <property name="timeagent.dist.dir"        value="${timeagent.build.dir}/dist"/>
    <property name="timeagent.test.dir"        value="${basedir}/test"/>
    <property name="timeagent.java.test.dir"   value="${timeagent.test.dir}/java"/>

    <!-- Import the FglAM tools -->
    <import file="${fglam.devkit.home}/buildtools/fglam-ant-macros.xml"/>

    <target name="timeagent-tooling-artifacts">
        <fglam:generator agent-definition="${timeagent.config.dir}/agent-definition.xml"
                        output-dir="${timeagent.tooling.output}"/>
        <!-- Load the generated agent.manifest to initialize build properties
             for use in the fglam ant macros -->
        <fglam:init-agent-manifest-props agent-manifest="${timeagent.tooling.output}/agent.manifest" prefix="timeagent"/>
    </target>

    <!-- Compile and package the agent binary files -->
    <target name="timeagent-compile-and-jar" depends="timeagent-tooling-artifacts">
        <fglam:compile-and-jar build-dir="${timeagent.build.dir}">
            <compile-options>
                <src path="${timeagent.tooling.output}/java-gen"/>
                <src path="${timeagent.src.dir}/java"/>
                <include name="**/*.java"/>
            </compile-options>
            <jar-options>
                <!-- Adds the LogResources.properties files to the jar file -->
                <fileset dir="${timeagent.src.dir}/java" includes="**/*.properties"/>
            </jar-options>
        </fglam:compile-and-jar>
        <mkdir dir="${timeagent.build.test.dir}/classes"/>
        <javac target="1.6" source="1.6"
            includeantruntime="no" includejavaruntime="no"
            deprecation="true" debug="true" debuglevel="lines,vars,source"
            destdir="${timeagent.build.test.dir}/classes">
            <classpath>
                <fileset dir="${timeagent.build.dir}/jars">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${fglam.devkit.home}/lib">
                    <include name="*.jar"/>
                </fileset>
                <fileset dir="${fglam.devkit.home}/buildtools/junit">
                    <include name="junit*.jar"/>
                </fileset>
            </classpath>

            <src path="${timeagent.tooling.output}/java-gen"/>
            <src path="${timeagent.test.dir}/java"/>
            <include name="**/time/*.java"/>
        </javac>
    </target>

    <!-- Creates a distribution which results in a FMS 5.0 deployeable cartridge file -->
    <target name="timeagent-dist" depends="timeagent-compile-and-jar"
            description="Builds a deployable cartridge with a GAR installer">

        <!-- create the dist output directory -->
        <mkdir dir="${timeagent.dist.dir}"/>

        <fglam:gar agent-manifest="${timeagent.tooling.output}/agent.manifest"
                   agent-lib-dir ="${timeagent.build.dir}/jars"
                   build-dir="${timeagent.build.dir}"
                   prefix="timeagent"/>
        <echo>Making topology in ${timeagent.dist.dir}</echo>
        <echo>CDT file ${timeagent.tooling.output}/cdt.xml</echo>
        <echo>Topology file ${timeagent.tooling.output}/topology.xml</echo>
        <echo>Monitoring Policy file ${timeagent.tooling.output}/monitoring-policy.xml</echo>
        <echo>WCF (input) file ${timeagent.config.dir}/wcf.xml</echo>
        <car destdir="${timeagent.dist.dir}" buildLocalizableCar="false">
            <cartridge
                    name="${timeagent.agent-manifest.name}"
                    final="true"
                    version="${timeagent.agent-manifest.ver}"
                    buildid="${timeagent.agent-manifest.build-id}"
                    author="FglAM Agent Developers">                
                <installers
                    name="${timeagent.agent-manifest.name}-Installers"
                    version="${timeagent.agent-manifest.ver}">
                    <installer
                        name="${timeagent.agent-manifest.name}"
                        version="${timeagent.agent-manifest.ver}"
                        file="${timeagent.build.dir}/gar/${timeagent.agent-manifest.name}.gar"
                        type="fglam-client-pkg">
                        <!-- This installer contains the following agent types. Each agent
                             type in the cartridge must be listed here. -->
                        <agent type="TimeAgent" version="${timeagent.agent-manifest.ver}" 
                                                build="${timeagent.agent-manifest.build-id}"/>
                    </installer>
                </installers>                
                <topologytypes
                    name="${timeagent.agent-manifest.name}-Topology-Types"
                    version="${timeagent.agent-manifest.ver}"
                    file="${timeagent.tooling.output}/timeagent-topology.xml"/>
                <topologytypes 
                    name="${timeagent.agent-manifest.name}-Detailed-Topology-Types"
                    version="${timeagent.agent-manifest.ver}"
                    file="${timeagent.tooling.output}/timeagent-topology-detailed.xml"/>
                <monitoringpolicy
                    name="${timeagent.agent-manifest.name}-Properties"
                    version="${timeagent.agent-manifest.ver}"
                    file="${timeagent.tooling.output}/monitoring-policy.xml"/>
                <monitoringpolicy
                    name="${timeagent.agent-manifest.name}-Rules"
                    version="${timeagent.agent-manifest.ver}"
                    file="${timeagent.config.dir}/timeagent-rules.xml"/>
                <cdt name="example-CDT"
                    version="${timeagent.agent-manifest.ver}"
                    adapter="FglAM">
                        <binding type="TimeAgent" file="${timeagent.tooling.output}/cdt.xml"/>
                </cdt>
                <!-- The topology schema in a cartridge can now be localized by deploying a resource bundle.
                     The cartridge component must use the "topology-localizations" name and the basename must
                     be the name of your properties file without any locale suffixes or file extensions. If
                     your properties file is topology-localizations.properties, then the basename would have
                     to be "topology-localizations". To see the new localized names go to the Schema Browser,
                     select one of your topology types, and hover over the property name. The page itself should
                     show the camelCase name, but the hover should show the new localized name. -->
                <localizations
                    name="topology-localizations"
                    cartridge="${timeagent.agent-manifest.name}"
                    version="${timeagent.agent-manifest.ver}"
                    basename="TopologyLocale">
                    <fileset dir="${timeagent.config.dir}/locale">
                        <include name="**/*.properties"/>
                    </fileset>
                </localizations>
                <wcf name="timeagent_wcf-root"
                     author="FglAM Agent Developers"
                     version="${timeagent.agent-manifest.ver}"
                     module="system/time20agent"
                     prefixwcf="true"
                    >
                    <fileset dir="${timeagent.config.dir}/wcf" includes="**"/>
                </wcf>
            </cartridge>
        </car>

        <!-- Create a Simulator CAR for this Agent Package -->
        <fglam:dev-kit-simulator build-dir="${timeagent.build.dir}" output="${timeagent.tooling.output}" input="${timeagent.tooling.output}/simulator/simulator.xml"/>        

        <!-- Move the generated simulator car into our dist directory -->
        <move todir="${timeagent.dist.dir}">
            <fileset dir="${timeagent.tooling.output}/simulator/dist">
                <include name="*.car"/>
            </fileset>
        </move>
    </target>

    <target name="timeagent-run" depends="timeagent-dist" description="Launches the Agent Harness app">
        <fglam:agent-harness agent-file="${timeagent.config.dir}/agent-definition.xml" gar-file="${timeagent.build.dir}/gar/${timeagent.agent-manifest.name}.gar"/>
    </target>

    <!-- Delete any files generated by the build process -->
    <target name="timeagent-clean">
        <delete dir="${timeagent.build.dir}"/>
    </target>

    <target name="timeagent-export-wcf" description="Exports the WCF module from the FMS">
        <fglam:fglcmd-export-wcf module="time20agent" extract-dir="${basedir}/config"/>
    </target>

    <!-- Deploy the created cartridge to a running server -->
    <target name="timeagent-deploy" depends="timeagent-dist" description="Deploy the created cartridge to a running server">
        <fglam:redeploy-cartridge name="${timeagent.agent-manifest.name}"
                                  version="${timeagent.agent-manifest.ver}"
                                  dir="${timeagent.dist.dir}"/>
    </target>

    <target name="timeagent-findbugs" depends="timeagent-compile-and-jar">
        <fglam:findbugs results="${timeagent.build.dir}/results" analyze="com.quest.fglam.example.-">
            <fglam:findbugs-jars>
                <fileset dir="${timeagent.build.dir}/jars">
                    <include name="*.jar"/>
                </fileset>
            </fglam:findbugs-jars>

            <fglam:findbugs-args>
                <arg value="-sourcepath"/><arg path="${basedir}/src/java"/>
                <arg value="-sourcepath"/><arg path="${timeagent.build.dir}/tooling/java-gen"/>
            </fglam:findbugs-args>

            <fglam:findbugs-aux/>
        </fglam:findbugs>
    </target>

    <target name="timeagent-junit" depends="timeagent-compile-and-jar">
        <fglam:junit results="${timeagent.build.dir}/results">
            <fglam:jvm-args/>

            <fglam:jars>
                <fileset dir="${timeagent.build.dir}/jars">
                    <include name="*.jar"/>
                </fileset>

                <pathelement location="${timeagent.build.test.dir}/classes"/>
            </fglam:jars>

            <fglam:files>
                <fileset dir="${timeagent.java.test.dir}">
                    <include name="**/time/Test*.java"/>
                </fileset>
            </fglam:files>
        </fglam:junit>
    </target>

    <target name="tests" depends="timeagent-junit,timeagent-findbugs">
        <fail message="One or more JUnit tests failed" if="junit.failure"/>
        <fail message="One ore more of the FindBugs tests failed">
            <condition>
                <not><equals arg1="${findbugs.exitcode}" arg2="0"/></not>
            </condition>
        </fail>
    </target>
</project>
